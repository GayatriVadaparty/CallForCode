# -*- coding: utf-8 -*-
"""CfC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zZQlUHHZ_ZexiRPEVOCpN6omfG5lallt
"""

import pandas as pd
import numpy as np
import pickle

import matplotlib.pyplot as plt

df=pd.read_csv("C Emission.csv")

x=df[['Engine Size(L)','Cylinders','Transmission','Gears','Fuel Type','Fuel Consumption City (L/100 km)','Fuel Consumption Comb (L/100 km)','Fuel Consumption Hwy (L/100 km)','Fuel Consumption Comb (mpg)']]
y=df['CO2 Emissions']

print(x)
print(y)

from sklearn import linear_model
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_absolute_percentage_error

print(x.shape)
print(y.shape)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=52)

print(x_train.shape)
print(x_test.shape)

model=linear_model.LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

print(f"The mean absolute error is {mean_absolute_error(y_test,y_pred)}")
print(f"The mean absolute percentage error is {mean_absolute_percentage_error(y_test,y_pred)}")
pickle.dump(model,open('CEModelx.pkl','wb'))
# xcor=list()
# for i in range(1847):
#   xcor.append(i)

# plt.plot(xcor,y_test)
# plt.plot(xcor,y_pred)
# plt.show()

# plt.plot(x_test['Fuel Type'],y_test)
# plt.plot(x_test['Fuel Type'],y_pred)
# plt.show()

# plt.plot(x_test['Engine Size(L)'],y_test)
# plt.plot(x_test['Engine Size(L)'],y_pred)
# plt.show()

# plt.plot(x_test['Cylinders'],y_test)
# plt.plot(x_test['Cylinders'],y_pred,)
# plt.show()

# plt.plot(x_test['Transmission'],y_test)
# plt.plot(x_test['Transmission'],y_pred)
# plt.show()

# plt.plot(x_test['Gears'],y_pred)

# plt.plot(x_test['Gears'],y_test)
# plt.show()

# plt.plot(x_test['Fuel Consumption City (L/100 km)'],y_pred)

# plt.plot(x_test['Fuel Consumption City (L/100 km)'],y_test)
# plt.show()

# plt.plot(x_test['Fuel Consumption Hwy (L/100 km)'],y_pred)

# plt.plot(x_test['Fuel Consumption Hwy (L/100 km)'],y_test)
# plt.show()

# plt.plot(x_test['Fuel Consumption Comb (L/100 km)'],y_pred)

# plt.plot(x_test['Fuel Consumption Comb (L/100 km)'],y_test)
# plt.show()

# plt.plot(x_test['Fuel Consumption Comb (mpg)'],y_pred)

# plt.plot(x_test['Fuel Consumption Comb (mpg)'],y_test)
# plt.show()
